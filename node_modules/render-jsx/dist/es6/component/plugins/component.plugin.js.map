{"version":3,"file":"component.plugin.js","sourceRoot":"","sources":["../../../../src/component/plugins/component.plugin.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,qBAAqB,EAAE,MAAM,EAAgB,MAAM,gBAAgB,CAAC;AAC3F,OAAO,EAAE,kBAAkB,EAAE,MAAM,cAAc,CAAC;AAIlD,MAAM,OAAgB,eACpB,SAAQ,MAAsB;IAK9B,YAAY,GAAG,UAAgD;QAC7D,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,IAAI,CAAC,QAAkB;QACrB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAEtD,wBAAwB;QACxB,IAAI,qBAAqB,CAAC,QAAQ,CAAC,EAAE;YACnC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBAC3B,IAAI,CAAC,YAAY,kBAAkB,EAAE;oBACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACzB;YACH,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,MAAM,CAAC,GAAQ,EAAE,KAAgC,EAAE,GAAG,QAAe;QACnE,MAAM,IAAI,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,IAAI,EAAE,EAAE,QAAQ,EAAE,CAAC;QAEnD,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;YACpB,IAAI,SAAS,GAAuB,EAAE,CAAC;YACvC,MAAM,IAAI,GAAmC,EAAE,CAAC;YAEhD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CACpC,UAAU,CAAC,EAAE,CAAC,SAAS,mCAAQ,SAAS,GAAK,UAAU,CAAE,EACzD,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EACzB,IAAI,CACL,CAAC,CAAC;YAEH,MAAM,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAChD,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAElC,OAAO,CAAC,CAAC;SACV;aAAM;YACL,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;CAIF","sourcesContent":["import { CreatePlugin, isRendererWithPlugins, Plugin, RendererLike } from '../../renderer';\nimport { ComponentProcessor } from '../processor';\nimport { ComponentData, ComponentPostProcessor, ComponentProvision } from '../types';\n\n\nexport abstract class ComponentPlugin<Node, Renderer extends RendererLike<Node>>\n  extends Plugin<Node, Renderer>\n  implements CreatePlugin<Node, Renderer> {\n\n  processors: ComponentProcessor<Node, Renderer>[];\n\n  constructor(...processors: ComponentProcessor<Node, Renderer>[]) {\n    super();\n    this.processors = processors;\n  }\n\n  plug(renderer: Renderer) {\n    super.plug(renderer);\n    this.processors.forEach(p => p.plug(this.renderer()));\n\n    /*istanbul ignore else*/\n    if (isRendererWithPlugins(renderer)) {\n      renderer.plugins.forEach(p => {\n        if (p instanceof ComponentProcessor) {\n          this.processors.push(p);\n        }\n      });\n    }\n\n    this.processors = this.processors.sort((a, b) => a.priority() - b.priority());\n  }\n\n  create(tag: any, props?: { [prop: string]: any; }, ...children: any[]): Node | undefined {\n    const data = { tag, props: props || {}, children };\n\n    if (this.match(data)) {\n      let provision: ComponentProvision = {};\n      const post: ComponentPostProcessor<Node>[] = [];\n\n      this.processors.forEach(p => p.process(\n        _provision => provision = { ...provision, ..._provision },\n        _post => post.push(_post),\n        data\n      ));\n\n      const $ = this.createComponent(data, provision);\n      post.reverse().forEach(p => p($));\n\n      return $;\n    } else {\n      return undefined;\n    }\n  }\n\n  abstract createComponent(component: ComponentData, provision: ComponentProvision): Node;\n  abstract match(component: ComponentData): boolean;\n}\n"]}