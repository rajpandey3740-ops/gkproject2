{"version":3,"file":"ref.js","sourceRoot":"","sources":["../../../src/common/ref.ts"],"names":[],"mappings":"AAAA,kBAAkB;AAElB,OAAO,EAAE,kBAAkB,EAAE,uBAAuB,EAAE,MAAM,UAAU,CAAC;AAGvE,MAAM,OAAO,GAAG;IAAhB;QACE,cAAS,GAAG,KAAK,CAAC;IA2BpB,CAAC;IAxBC,IAAW,QAAQ;QACjB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;IAC3B,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,IAAW,CAAC;QACV,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE;YACtB,MAAM,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;SACpC;QAED,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAEM,OAAO,CAAC,CAAI;QACjB,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;YACrB,MAAM,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC;SACzC;QAED,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;CACF;AAGD,MAAM,UAAU,GAAG;IACjB,OAAO,IAAI,GAAG,EAAK,CAAC;AACtB,CAAC","sourcesContent":["/*global RefLike*/\n\nimport { UnresolvedRefError, RefAlreadyResolvedError } from './errors';\n\n\nexport class Ref<T> implements RefLike<T> {\n  _resolved = false;\n  _$: T;\n\n  public get resolved() {\n    return this.isResolved();\n  }\n\n  public isResolved() {\n    return this._resolved;\n  }\n\n  public get $() {\n    if (!this.isResolved()) {\n      throw new UnresolvedRefError(this);\n    }\n\n    return this._$;\n  }\n\n  public resolve(t: T) {\n    if (this.isResolved()) {\n      throw new RefAlreadyResolvedError(this);\n    }\n\n    this._$ = t;\n    this._resolved = true;\n  }\n}\n\n\nexport function ref<T = Node>() {\n  return new Ref<T>();\n}\n"]}