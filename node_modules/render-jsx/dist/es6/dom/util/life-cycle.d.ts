import { LifeCycleHook } from '../../renderer';
export interface LifeCycleInfo {
    binds?: (() => void)[];
    clears?: (() => void)[];
    bound: boolean;
    cleared: boolean;
}
export declare function lifeCycleInfo(node: Node, createIfNonExistent: true): LifeCycleInfo;
export declare function lifeCycleInfo(node: Node, createIfNonExistent?: boolean): LifeCycleInfo | undefined;
export declare function fragmentLifeCycleInfo(fragment: DocumentFragment, createIfNonExistent: boolean): LifeCycleInfo | undefined;
export declare function setLifeCycleMarker(fragment: DocumentFragment, marker: Node): void;
export declare function getLifeCycleMarker(fragment: DocumentFragment): any;
export declare function lifeCycleClear(node: Node): void;
export declare function lifeCycleBind(node: Node): void;
export declare function attachLifeCycleHook(hook: LifeCycleHook, node: Node): void;
