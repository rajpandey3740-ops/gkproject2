{"version":3,"file":"fragment-lcmarker.processor.js","sourceRoot":"","sources":["../../../../src/dom/component/fragment-lcmarker.processor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,cAAc,CAAC;AACnC,OAAO,EAA0B,kBAAkB,EAAyC,MAAM,iBAAiB,CAAC;AAEpH,OAAO,EAAE,kBAAkB,EAAE,MAAM,SAAS,CAAC;AAQ7C,MAAM,OAAO,yCACX,SAAQ,kBAAyC;IAEjD,OAAO,CACL,OAAgD,EAChD,IAAuD;QAEvD,IAAI,MAAM,GAAiC,SAAS,CAAC;QAErD,OAAO,CAAC;YACN,kBAAkB,EAAE,CAAC,IAAsB,EAAE,EAAE,CAAC,MAAM,GAAG,IAAI;SAC9D,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,EAAE;YACV,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,sBAAsB,IAAI,MAAM,EAAE;gBAC3D,IAAI,MAAM,YAAY,GAAG,EAAE;oBACzB,kBAAkB,CAAC,IAAwB,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;iBACxD;qBAAM;oBACL,kBAAkB,CAAC,IAAwB,EAAE,MAAM,CAAC,CAAC;iBACtD;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,OAAO,kBAAkB,CAAC,gBAAgB;YACxC,CAAC,kBAAkB,CAAC,WAAW,GAAG,kBAAkB,CAAC,gBAAgB,CAAC,GAAG,GAAG,CAAC;IACjF,CAAC;CACF","sourcesContent":["import { Ref } from '../../common';\nimport { ComponentPostProcessor, ComponentProcessor, ComponentProvision, LiveComponentThis } from '../../component';\nimport { LiveDOMRenderer } from '../live-renderer';\nimport { setLifeCycleMarker } from '../util';\n\n\nexport interface LiveDOMComponentThis extends LiveComponentThis {\n  setLifeCycleMarker: (node: Node | Ref<Node>) => void;\n}\n\n\nexport class FragmentLifeCycleMarkerComponentProcessor\n  extends ComponentProcessor<Node, LiveDOMRenderer> {\n\n  process(\n    provide: (provision: ComponentProvision) => void,\n    post: (processor: ComponentPostProcessor<Node>) => void\n  ): void {\n    let marker: Node | Ref<Node> | undefined = undefined;\n\n    provide({\n      setLifeCycleMarker: (node: Node | Ref<Node>) => marker = node\n    });\n\n    post(node => {\n      if (node.nodeType === node.DOCUMENT_FRAGMENT_NODE && marker) {\n        if (marker instanceof Ref) {\n          setLifeCycleMarker(node as DocumentFragment, marker.$);\n        } else {\n          setLifeCycleMarker(node as DocumentFragment, marker);\n        }\n      }\n    });\n  }\n\n  priority(): number {\n    return ComponentProcessor.PriorityFallback +\n      (ComponentProcessor.PriorityMax - ComponentProcessor.PriorityFallback) / 100;\n  }\n}\n"]}