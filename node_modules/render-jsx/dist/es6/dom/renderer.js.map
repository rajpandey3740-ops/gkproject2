{"version":3,"file":"renderer.js","sourceRoot":"","sources":["../../../src/dom/renderer.ts"],"names":[],"mappings":"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","sourcesContent":["import { DOMWindow } from 'jsdom';\nimport { isPostRenderPlugin, Plugin, PluginFactory, Renderer, RendererLike } from '../renderer';\nimport { UnrecognizedTagError } from './errors';\n\n\nexport class DOMRenderer extends Renderer<Node, DOMRenderer> {\n  readonly dom: DOMWindow;\n\n  constructor(dom?: DOMWindow, ...plugins: PluginFactory<Node, RendererLike<Node>>[]);\n  constructor(...plugins: PluginFactory<Node, RendererLike<Node>>[]);\n  constructor(\n    dom: DOMWindow | PluginFactory<Node, RendererLike<Node>> = window as any,\n    ...plugins: PluginFactory<Node, RendererLike<Node>>[]\n  ) {\n    super(...(typeof dom === 'function' ? [dom, ...plugins] : plugins));\n    if (!dom || typeof dom === 'function') {\n      this.dom = window as any;\n    } else {\n      this.dom = dom;\n    }\n  }\n\n  get document() { return this.dom.document; }\n\n  fallbackAppend(target: any, host: Node): void {\n    if (target instanceof this.dom.Node) {\n      host.appendChild(target);\n    } else if (Array.isArray(target)) {\n      target.forEach(child => this.append(child, host));\n    } else {\n      host.appendChild(this.document.createTextNode(`${target}`));\n    }\n  }\n\n  fallbackSetProp(node: Node, prop: string, target: any): void {\n    if (node instanceof this.dom.HTMLElement) {\n      if (typeof target === 'boolean') {\n        if (target) {\n          node.setAttribute(prop, '');\n        } else {\n          node.removeAttribute(prop);\n        }\n      } else {\n        node.setAttribute(prop, `${target}`);\n      }\n    }\n  }\n\n  fallbackSetContent(node: Node, target: any): void {\n    if (node instanceof this.dom.HTMLElement) {\n      node.innerHTML = `${target}`;\n    } else {\n      node.textContent = `${target}`;\n    }\n  }\n\n  fallbackFragment(): Node {\n    return this.document.createDocumentFragment();\n  }\n\n  fallbackLeaf(): Node {\n    return this.document.createTextNode('');\n  }\n\n  fallbackCreate(tag: any, props?: { [prop: string]: any; }): Node {\n    if (!(tag instanceof this.dom.Node || typeof tag === 'string')) {\n      throw new UnrecognizedTagError(tag);\n    }\n\n    if (tag instanceof this.dom.Node) {\n      return tag;\n    } else if (props && props.xmlns) {\n      return this.document.createElementNS(`${props.xmlns}`, tag);\n    } else {\n      return this.document.createElement(tag);\n    }\n  }\n\n  renderOn(target: Node, host: Node): void {\n    host.appendChild(target);\n  }\n\n  renderAfter(target: Node, ref: Node): void {\n    if (ref.parentNode) {\n      ref.parentNode.insertBefore(target, ref.nextSibling);\n    }\n  }\n\n  renderBefore(target: Node, ref: Node): void {\n    if (ref.parentNode) {\n      ref.parentNode.insertBefore(target, ref);\n    }\n  }\n\n  postRender(target: Node) {\n    const post = this.plugins.filter(isPostRenderPlugin);\n    if (target instanceof this.dom.DocumentFragment) {\n      const children = Array.from(target.childNodes);\n\n      return () => children.forEach(child => { this.postRender(child)(); });\n    } else {\n      return () => post.forEach(p => p.postRender(target));\n    }\n  }\n\n  remove(node: Node) {\n    node.parentNode?.removeChild(node);\n  }\n\n  clone(...plugins: PluginFactory<Node, RendererLike<Node>>[]) {\n    return new DOMRenderer(this.dom, ...plugins);\n  }\n}\n"]}