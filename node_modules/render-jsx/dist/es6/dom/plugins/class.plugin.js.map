{"version":3,"file":"class.plugin.js","sourceRoot":"","sources":["../../../../src/dom/plugins/class.plugin.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,qBAAqB,EAAE,MAAM,EAA4B,MAAM,gBAAgB,CAAC;AAOzF,SAAS,gBAAgB,CAA+B,CAAkB;IACxE,OAAO,CAAC,CAAE,CAAS,CAAC,QAAQ,IAAI,OAAQ,CAAS,CAAC,QAAQ,KAAK,UAAU,CAAC;AAC5E,CAAC;AAMD,SAAS,mBAAmB,CAA+B,CAAkB;IAC3E,OAAO,CAAC,CAAE,CAAS,CAAC,cAAc,IAAI,OAAQ,CAAS,CAAC,cAAc,KAAK,UAAU,CAAC;AACxF,CAAC;AAED,MAAM,OAAO,WACX,SAAQ,MAAe;IAMvB,IAAI,CAAC,QAAW;QACd,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrB,IAAI,qBAAqB,CAAC,QAAQ,CAAC,EAAE;YACnC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YACjE,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;SACxE;IACH,CAAC;IAED,QAAQ;QACN,OAAO,MAAM,CAAC,gBAAgB,CAAC;IACjC,CAAC;IAED,OAAO,CAAC,IAAU,EAAE,IAAY,EAAE,MAAW;QAC3C,IAAI,IAAI,KAAK,OAAO,EAAE;YACpB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBACzB,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;oBAClB,IAAI,IAAI,GAAG,EAAE,CAAC;oBACd,MAAM,EAAE,GAAG,CAAC,GAAW,EAAE,EAAE;wBACzB,IAAK,IAAoB,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;4BACjD,IAAoB,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;yBAC9C;wBAEA,IAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;oBAClD,CAAC,CAAC;oBAEF,IAAI,IAAI,CAAC,eAAe;wBACpB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAmB,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE;wBAClG,OAAO;qBACR;yBAAM,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;wBAChC,IAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;qBACzC;yBAAM;wBACL,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,IAAmB,CAAC,CAAC;qBAC5C;gBACH,CAAC,CAAC,CAAC;gBAEH,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,MAAK,MAAM,EAAE;gBACzC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAmB,CAAC,CAAC;gBAE/C,OAAO,IAAI,CAAC;aACb;SACF;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED,YAAY,CAAC,GAAwB,EAAE,IAAiB;QACtD,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE;YACxC,IAAI,IAAI,CAAC,kBAAkB;gBACzB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE;oBAC9F,IAAI,CAAC,EAAE;wBAAG,IAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;qBAAE;yBAC9C;wBAAG,IAAoB,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;qBAAE;gBACtD,CAAC,CAAC,CAAC,EAAE;gBACL,OAAO;aACR;iBAAM,IAAI,CAAC,CAAC,GAAG,EAAE;gBAAG,IAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;aAAE;iBACzD;gBAAG,IAAoB,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;aAAE;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import { isRendererWithPlugins, Plugin, PropPlugin, RendererLike } from '../../renderer';\n\n\nexport interface AddClassPlugin<R extends RendererLike<Node>> extends Plugin<Node, R> {\n  addClass(node: HTMLElement, target: any, _switch: (value: string) => void): boolean;\n}\n\nfunction isAddClassPlugin<R extends RendererLike<Node>>(p: Plugin<Node, R>):p is AddClassPlugin<R> {\n  return !!(p as any).addClass && typeof (p as any).addClass === 'function';\n}\n\nexport interface ToggleClassPlugin<R extends RendererLike<Node>> extends Plugin<Node, R> {\n  addClassToggle(node: HTMLElement, className: string, target: any, toggle: (v: boolean) => void): boolean;\n}\n\nfunction isToggleClassPlugin<R extends RendererLike<Node>>(p: Plugin<Node, R>):p is ToggleClassPlugin<R> {\n  return !!(p as any).addClassToggle && typeof (p as any).addClassToggle === 'function';\n}\n\nexport class ClassPlugin<R extends RendererLike<Node>>\n  extends Plugin<Node, R>\n  implements PropPlugin<Node> {\n\n  private addClassPlugins: AddClassPlugin<RendererLike<Node>>[] | undefined;\n  private toggleClassPlugins: ToggleClassPlugin<RendererLike<Node>>[] | undefined;\n\n  plug(renderer: R) {\n    super.plug(renderer);\n    if (isRendererWithPlugins(renderer)) {\n      this.addClassPlugins = renderer.plugins.filter(isAddClassPlugin);\n      this.toggleClassPlugins = renderer.plugins.filter(isToggleClassPlugin);\n    }\n  }\n\n  priority(): number {\n    return Plugin.PriorityFallback;\n  }\n\n  setProp(node: Node, prop: string, target: any): boolean {\n    if (prop === 'class') {\n      if (Array.isArray(target)) {\n        target.forEach(cl => {\n          let prev = '';\n          const sw = (_cl: string) => {\n            if ((node as HTMLElement).classList.contains(prev)) {\n              (node as HTMLElement).classList.remove(prev);\n            }\n\n            (node as HTMLElement).classList.add(prev = _cl);\n          };\n\n          if (this.addClassPlugins &&\n              this.addClassPlugins.some(p => isAddClassPlugin(p) && p.addClass(node as HTMLElement, cl, sw))) {\n            return;\n          } else if (typeof cl === 'string') {\n            (node as HTMLElement).classList.add(cl);\n          } else {\n            this.setToggleMap(cl, node as HTMLElement);\n          }\n        });\n\n        return true;\n      } else if (target?.constructor === Object) {\n        this.setToggleMap(target, node as HTMLElement);\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  setToggleMap(map: {[cl: string]: any}, node: HTMLElement) {\n    Object.entries(map).forEach(([cl, clt]) => {\n      if (this.toggleClassPlugins &&\n        this.toggleClassPlugins.some(p => isToggleClassPlugin(p) && p.addClassToggle(node, cl, clt, v => {\n          if (v) { (node as HTMLElement).classList.add(cl); }\n          else { (node as HTMLElement).classList.remove(cl); }\n        }))) {\n        return;\n      } else if (!!clt) { (node as HTMLElement).classList.add(cl); }\n      else { (node as HTMLElement).classList.remove(cl); }\n    });\n  }\n}\n"]}