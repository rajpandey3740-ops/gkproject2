{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/renderer/types.ts"],"names":[],"mappings":"","sourcesContent":["export interface ToBeRenderered<Node> {\n  target: Node;\n  on(host: Node): void;\n  after(host: Node): void;\n  before(host: Node): void;\n}\n\n\nexport interface RendererLike<Node> {\n  append(target: any | any[], host: Node): void;\n  setProp(node: Node, prop: string, target: any): void;\n  setContent(node: Node, target: any): void;\n\n  fragment: Node;\n  leaf(): Node;\n  create(tag: any, props?: {[prop: string]: any}, ...children: any[]): Node;\n  render(target: Node | ((renderer: RendererLike<Node>) => Node)): ToBeRenderered<Node>;\n  remove(target: Node, temporary?: boolean): void;\n}\n\n\nexport interface LifeCycleHook {\n  bind?(): void;\n  clear?(): void;\n}\n\n\nexport interface LiveRendererLike<Node> extends RendererLike<Node> {\n  hook(node: Node, hook: LifeCycleHook): void;\n}\n"]}