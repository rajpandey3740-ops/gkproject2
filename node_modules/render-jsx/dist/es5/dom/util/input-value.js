"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setInputValue = exports.getInputValue = exports.getOptionObjectValue = exports.setOptionObjectValue = void 0;
function setOptionObjectValue($, value) {
    $._value = value;
}
exports.setOptionObjectValue = setOptionObjectValue;
function getOptionObjectValue($) {
    return $._value;
}
exports.getOptionObjectValue = getOptionObjectValue;
function getInputValue($) {
    if ($.nodeName === 'INPUT') {
        if ($.type === 'number') {
            return parseFloat($.value);
        }
        else if ($.type === 'checkbox' || $.type === 'radio') {
            return $.checked;
        }
        else {
            return $.value;
        }
    }
    else if ($.nodeName === 'SELECT') {
        var s = $;
        var selected = Array.from(s.selectedOptions).map(function (option) {
            return getOptionObjectValue(option)
                || option.value
                || option.text;
        });
        return s.multiple ? selected : selected[0];
    }
    else {
        return $.value;
    }
}
exports.getInputValue = getInputValue;
function setInputValue($, value) {
    if ($.nodeName === 'INPUT') {
        if ($.type === 'checkbox' || $.type === 'radio') {
            $.checked = !!value;
        }
        else {
            $.value = value;
        }
    }
    else if ($.nodeName === 'SELECT') {
        var s = $;
        var selected_1 = Array.isArray(value) ? value : [value];
        Array.from(s.options).forEach(function (option) {
            option.selected = ((getOptionObjectValue(option) && selected_1.includes(getOptionObjectValue(option)))
                || (option.value && selected_1.includes(option.value))
                || (!option.value && selected_1.includes(option.text)));
        });
    }
    else {
        $.value = value;
    }
}
exports.setInputValue = setInputValue;
//# sourceMappingURL=input-value.js.map