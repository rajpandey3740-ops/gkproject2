import { Plugin, PropPlugin, RendererLike } from '../../renderer';
export interface AddClassPlugin<R extends RendererLike<Node>> extends Plugin<Node, R> {
    addClass(node: HTMLElement, target: any, _switch: (value: string) => void): boolean;
}
export interface ToggleClassPlugin<R extends RendererLike<Node>> extends Plugin<Node, R> {
    addClassToggle(node: HTMLElement, className: string, target: any, toggle: (v: boolean) => void): boolean;
}
export declare class ClassPlugin<R extends RendererLike<Node>> extends Plugin<Node, R> implements PropPlugin<Node> {
    private addClassPlugins;
    private toggleClassPlugins;
    plug(renderer: R): void;
    priority(): number;
    setProp(node: Node, prop: string, target: any): boolean;
    setToggleMap(map: {
        [cl: string]: any;
    }, node: HTMLElement): void;
}
