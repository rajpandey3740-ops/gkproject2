"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LiveDOMRenderer = void 0;
var renderer_1 = require("./renderer");
var life_cycle_1 = require("./util/life-cycle");
var LiveDOMRenderer = /** @class */ (function (_super) {
    __extends(LiveDOMRenderer, _super);
    function LiveDOMRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LiveDOMRenderer.prototype.hook = function (node, hook) {
        life_cycle_1.attachLifeCycleHook(hook, node);
    };
    LiveDOMRenderer.prototype.postRender = function (target) {
        var _this = this;
        if (target instanceof this.dom.DocumentFragment) {
            return _super.prototype.postRender.call(this, target);
        }
        else {
            return function () {
                if (_this.document.contains(target)) {
                    life_cycle_1.lifeCycleBind(target);
                }
                _super.prototype.postRender.call(_this, target)();
            };
        }
    };
    LiveDOMRenderer.prototype.plug = function () {
        var plugins = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            plugins[_i] = arguments[_i];
        }
        return _super.prototype.plug.apply(this, plugins);
    };
    LiveDOMRenderer.prototype.clone = function () {
        var plugins = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            plugins[_i] = arguments[_i];
        }
        return new (LiveDOMRenderer.bind.apply(LiveDOMRenderer, __spreadArrays([void 0, this.dom], plugins)))();
    };
    LiveDOMRenderer.prototype.remove = function (node, temporary) {
        _super.prototype.remove.call(this, node);
        if (!temporary) {
            life_cycle_1.lifeCycleClear(node);
        }
    };
    return LiveDOMRenderer;
}(renderer_1.DOMRenderer));
exports.LiveDOMRenderer = LiveDOMRenderer;
//# sourceMappingURL=live-renderer.js.map