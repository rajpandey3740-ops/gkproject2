"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComponentPlugin = void 0;
var renderer_1 = require("../../renderer");
var processor_1 = require("../processor");
var ComponentPlugin = /** @class */ (function (_super) {
    __extends(ComponentPlugin, _super);
    function ComponentPlugin() {
        var processors = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            processors[_i] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.processors = processors;
        return _this;
    }
    ComponentPlugin.prototype.plug = function (renderer) {
        var _this = this;
        _super.prototype.plug.call(this, renderer);
        this.processors.forEach(function (p) { return p.plug(_this.renderer()); });
        /*istanbul ignore else*/
        if (renderer_1.isRendererWithPlugins(renderer)) {
            renderer.plugins.forEach(function (p) {
                if (p instanceof processor_1.ComponentProcessor) {
                    _this.processors.push(p);
                }
            });
        }
        this.processors = this.processors.sort(function (a, b) { return a.priority() - b.priority(); });
    };
    ComponentPlugin.prototype.create = function (tag, props) {
        var children = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            children[_i - 2] = arguments[_i];
        }
        var data = { tag: tag, props: props || {}, children: children };
        if (this.match(data)) {
            var provision_1 = {};
            var post_1 = [];
            this.processors.forEach(function (p) { return p.process(function (_provision) { return provision_1 = __assign(__assign({}, provision_1), _provision); }, function (_post) { return post_1.push(_post); }, data); });
            var $_1 = this.createComponent(data, provision_1);
            post_1.reverse().forEach(function (p) { return p($_1); });
            return $_1;
        }
        else {
            return undefined;
        }
    };
    return ComponentPlugin;
}(renderer_1.Plugin));
exports.ComponentPlugin = ComponentPlugin;
//# sourceMappingURL=component.plugin.js.map